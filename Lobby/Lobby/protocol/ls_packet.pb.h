// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ls_packet.proto

#ifndef PROTOBUF_ls_5fpacket_2eproto__INCLUDED
#define PROTOBUF_ls_5fpacket_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ls_packet {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_ls_5fpacket_2eproto();
void protobuf_AssignDesc_ls_5fpacket_2eproto();
void protobuf_ShutdownFile_ls_5fpacket_2eproto();

class GameStart;
class Ping;
class ServerAddress;

// ===================================================================

class Ping : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ls_packet.Ping) */ {
 public:
  Ping();
  virtual ~Ping();

  Ping(const Ping& from);

  inline Ping& operator=(const Ping& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ping& default_instance();

  void Swap(Ping* other);

  // implements Message ----------------------------------------------

  inline Ping* New() const { return New(NULL); }

  Ping* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Ping& from);
  void MergeFrom(const Ping& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Ping* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ping = 1;
  bool has_ping() const;
  void clear_ping();
  static const int kPingFieldNumber = 1;
  ::google::protobuf::int32 ping() const;
  void set_ping(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ls_packet.Ping)
 private:
  inline void set_has_ping();
  inline void clear_has_ping();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 ping_;
  friend void  protobuf_AddDesc_ls_5fpacket_2eproto();
  friend void protobuf_AssignDesc_ls_5fpacket_2eproto();
  friend void protobuf_ShutdownFile_ls_5fpacket_2eproto();

  void InitAsDefaultInstance();
  static Ping* default_instance_;
};
// -------------------------------------------------------------------

class ServerAddress : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ls_packet.ServerAddress) */ {
 public:
  ServerAddress();
  virtual ~ServerAddress();

  ServerAddress(const ServerAddress& from);

  inline ServerAddress& operator=(const ServerAddress& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerAddress& default_instance();

  void Swap(ServerAddress* other);

  // implements Message ----------------------------------------------

  inline ServerAddress* New() const { return New(NULL); }

  ServerAddress* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerAddress& from);
  void MergeFrom(const ServerAddress& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ServerAddress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes host = 1;
  bool has_host() const;
  void clear_host();
  static const int kHostFieldNumber = 1;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  void set_host(const char* value);
  void set_host(const void* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);

  // required int32 port = 2;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ls_packet.ServerAddress)
 private:
  inline void set_has_host();
  inline void clear_has_host();
  inline void set_has_port();
  inline void clear_has_port();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  ::google::protobuf::int32 port_;
  friend void  protobuf_AddDesc_ls_5fpacket_2eproto();
  friend void protobuf_AssignDesc_ls_5fpacket_2eproto();
  friend void protobuf_ShutdownFile_ls_5fpacket_2eproto();

  void InitAsDefaultInstance();
  static ServerAddress* default_instance_;
};
// -------------------------------------------------------------------

class GameStart : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ls_packet.GameStart) */ {
 public:
  GameStart();
  virtual ~GameStart();

  GameStart(const GameStart& from);

  inline GameStart& operator=(const GameStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameStart& default_instance();

  void Swap(GameStart* other);

  // implements Message ----------------------------------------------

  inline GameStart* New() const { return New(NULL); }

  GameStart* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameStart& from);
  void MergeFrom(const GameStart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GameStart* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ls_packet.GameStart)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_ls_5fpacket_2eproto();
  friend void protobuf_AssignDesc_ls_5fpacket_2eproto();
  friend void protobuf_ShutdownFile_ls_5fpacket_2eproto();

  void InitAsDefaultInstance();
  static GameStart* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Ping

// required int32 ping = 1;
inline bool Ping::has_ping() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Ping::set_has_ping() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Ping::clear_has_ping() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Ping::clear_ping() {
  ping_ = 0;
  clear_has_ping();
}
inline ::google::protobuf::int32 Ping::ping() const {
  // @@protoc_insertion_point(field_get:ls_packet.Ping.ping)
  return ping_;
}
inline void Ping::set_ping(::google::protobuf::int32 value) {
  set_has_ping();
  ping_ = value;
  // @@protoc_insertion_point(field_set:ls_packet.Ping.ping)
}

// -------------------------------------------------------------------

// ServerAddress

// required bytes host = 1;
inline bool ServerAddress::has_host() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerAddress::set_has_host() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerAddress::clear_has_host() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerAddress::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host();
}
inline const ::std::string& ServerAddress::host() const {
  // @@protoc_insertion_point(field_get:ls_packet.ServerAddress.host)
  return host_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServerAddress::set_host(const ::std::string& value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ls_packet.ServerAddress.host)
}
inline void ServerAddress::set_host(const char* value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ls_packet.ServerAddress.host)
}
inline void ServerAddress::set_host(const void* value, size_t size) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ls_packet.ServerAddress.host)
}
inline ::std::string* ServerAddress::mutable_host() {
  set_has_host();
  // @@protoc_insertion_point(field_mutable:ls_packet.ServerAddress.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServerAddress::release_host() {
  // @@protoc_insertion_point(field_release:ls_packet.ServerAddress.host)
  clear_has_host();
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServerAddress::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    set_has_host();
  } else {
    clear_has_host();
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:ls_packet.ServerAddress.host)
}

// required int32 port = 2;
inline bool ServerAddress::has_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerAddress::set_has_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerAddress::clear_has_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerAddress::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 ServerAddress::port() const {
  // @@protoc_insertion_point(field_get:ls_packet.ServerAddress.port)
  return port_;
}
inline void ServerAddress::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:ls_packet.ServerAddress.port)
}

// -------------------------------------------------------------------

// GameStart

// required int32 type = 1;
inline bool GameStart::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameStart::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameStart::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameStart::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GameStart::type() const {
  // @@protoc_insertion_point(field_get:ls_packet.GameStart.type)
  return type_;
}
inline void GameStart::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ls_packet.GameStart.type)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ls_packet

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ls_5fpacket_2eproto__INCLUDED
